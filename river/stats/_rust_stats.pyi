class RsQuantile:
    def __init__(self, q: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsEWMean:
    def __init__(self, alpha: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsEWVar:
    def __init__(self, alpha: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsIQR:
    def __init__(self, q_inf: float, q_sup: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsKurtosis:
    def __init__(self, bias: bool): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsPeakToPeak:
    def __init__(self): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsSkew:
    def __init__(self, bias: float): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsRollingQuantile:
    def __init__(self, q: float, window_size: int): ...
    def update(self, x: float): ...
    def get(self) -> float: ...

class RsRollingIQR:
    def __init__(self, q_inf: float, q_sup: float, window_size: int): ...
    def update(self, x: float): ...
    def get(self) -> float: ...
